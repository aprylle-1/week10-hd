#week10/.guthub/workflows/deploy_prod.yml

#This workflow does the following:
# - Gets triggered when there is a PR to main
# - Builds and pushes the images with immutable tags
# - Deploys the images into a staging environment
# - Waits for the PR to be approved before deleting staging
# - Triggers the deploy to production workflow with same image tag

#GOAL: Be able to identify which image current PROD has using immutable images
name: PR to Main CI/CD

# on:
#   pull_request:
#     branches: [main]

on:
  workflow_dispatch:

env: 
  RESOURCE_GROUP: 'week10-rg-aprylle'
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  LOCATION: eastus
  AZURE_CLUSTER_NAME: 'week10-aks-aprylle'

jobs:
  # Outputs immutable image tags
  set_image_tag:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set_image_tag.outputs.IMAGE_TAG }}
      STORAGE_TAG: ${{ steps.set_storage_tag.outputs.STORAGE_TAG }}
      STAGING_TAG: ${{ steps.set_staging_tag.outputs.STAGING_TAG }}
    steps:
      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}-${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT
      
      - name: Set STORAGE_TAG
        id: set_storage_tag
        run: echo "STORAGE_TAG=st${GITHUB_SHA::7}${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT
      
      - name: Set STAGING_TAG
        id: set_staging_tag
        run: echo "STAGING_TAG=staging-${GITHUB_SHA::7}-${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT
  
  # Runs lint and tests for backend and pushes backend images to repository
  test_and_push_backend:
    needs: set_image_tag
    uses: ./.github/workflows/backend_ci.yml
    with:
      IMAGE_TAG: ${{ needs.set_image_tag.outputs.IMAGE_TAG }}
    secrets:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  # Pushes frontend image to repository
  push_frontend:
    needs: [test_and_push_backend, set_image_tag]
    uses: ./.github/workflows/frontend_ci.yml
    with:
      IMAGE_TAG: ${{ needs.set_image_tag.outputs.IMAGE_TAG }}
    secrets:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  # Dynamically creates AKS namespace + Azure Storage Account for Staging Environment
  create_staging_environment:
    needs: 
      - test_and_push_backend
      - push_frontend
      - set_image_tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set Kubernetes context (get AKS credentials)
      run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_CLUSTER_NAME }} --overwrite-existing
    
    - name: Create Staging Namespace
      run: |
        kubectl delete namespace ${{ needs.set_image_tag.outputs.STAGING_TAG }} --ignore-not-found
        kubectl wait --for=delete namespace/${{ needs.set_image_tag.outputs.STAGING_TAG }} --timeout=120s || true
        kubectl create namespace ${{ needs.set_image_tag.outputs.STAGING_TAG }}
    
    - name: Create Azure Storage Account
      run: |
        az storage account create \
          --name "${{ needs.set_image_tag.outputs.STORAGE_TAG }}" \
          --resource-group "${{ env.RESOURCE_GROUP }}" \
          --location "${{ env.LOCATION }}" \
          --sku Standard_LRS

    - name: Logout from Azure
      run: az logout
  
  deploy_staging_backend:
    needs:
      - create_staging_environment
    uses: ./.github/workflows/backend_cd.yml
    with:
      aks_cluster_name: 'week10-aks-aprylle'
      aks_resource_group: 'week10-rg-aprylle'
      aks_storage_name: '${{ needs.set_image_tag.outputs.STORAGE_TAG }}'
      aks_namespace: '${{ needs.set_image_tag.outputs.STAGING_TAG }}'
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
# week010/.github/workflows/frontend-cd.yml

name: CD - Deploy Frontend to AKS

# This workflow can be called by other workflows and takes inputs.
# Or it can be run manually if you provide the IPs.
on:
  workflow_call:
    inputs:
      product_api_ip:
        required: true
        type: string
      order_api_ip:
        required: true
        type: string
      customer_api_ip:
        required: true
        type: string
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string
      aks_namespace:
        required: true
        type: string
      image_tag:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
      AZURE_CONTAINER_REGISTRY:
        required: true


jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Azure login using a Service Principal secret
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Login to Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      # Inject Backend IPs to Frontend main.js
      - name: Inject Backend IPs into Frontend main.js
        run: |
          echo "Injecting IPs into frontend/static/js/main.js"
          # Ensure frontend/main.js is directly in the path for sed
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          sed -i "s|_CUSTOMER_API_URL_|${{ inputs.customer_api_ip }}|g" frontend/main.js
          
          # Display the modified file content for debugging
          echo "--- Modified main.js content ---"
          cat frontend/main.js
          echo "---------------------------------"
      
      # Inject Image Tags into Manifest Files
      - name: Inject Image Tag Into Manifest Files
        run: |
            sed -i "s|_IMAGE_TAG_|${{ inputs.image_tag }}|g" k8s/frontend.yaml
      
      # Build and Push Docker image for Frontend
      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/week10_frontend:${{ inputs.image_tag }} ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/week10_frontend:${{ inputs.image_tag }}

      - name: Set Kubernetes context (get AKS credentials)
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend with immutable image tag to AKS cluster: ${{ inputs.aks_cluster_name }}"
          cd k8s/
          # Ensure frontend-service.yaml is configured with your ACR
          kubectl apply -f frontend.yaml --namespace=${{ inputs.aks_namespace }}

      - name: Logout from Azure (AKS deployment)
        run: az logout